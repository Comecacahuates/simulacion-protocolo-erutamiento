[General]
sim-time-limit = 600s
debug-on-errors = true
cmdenv-express-mode = true
image-path = ../../images
#cmdenv-autoflush = true
#cmdenv-status-frequency = 1s
#**.cmdenv-log-level = info

#ned-path = .

#print-undisposed = true
**.scalar-recording = true
**.vector-recording = true

include ../base.ini

[Config Base]
network = veins_proj.sim.Scenario

# Veins
*.manager.launchConfig = xmldoc("9g3qxs.launchd.xml")

# Sistema de coordenadas
*.coordinateSystem.sceneLatitude = 19.4512939453deg
*.coordinateSystem.sceneLongitude = -99.1625976562deg
*.baseWorldUtility.playgroundSizeX = 1154m
*.baseWorldUtility.playgroundSizeY = 609m
*.baseWorldUtility.playgroundSizeZ = 10m
*.baseWorldUtility.use2D = true

# Hosts
*.numHosts = 2
*.host[*].mobility.coordinateSystemModule = "coordinateSystem"
*.host[*].mobility.initialAltitude = 0m
*.host[0].mobility.initialLatitude = 19.4494283deg
*.host[0].mobility.initialLongitude = -99.1598713deg
*.host[1].mobility.initialLatitude = 19.4486142deg
*.host[1].mobility.initialLongitude = -99.1600466deg

# Applicación de los hosts
*.host[*].numApps = 1
*.host[*].app[0].typename = "inet.applications.pingapp.PingApp"
*.host[*].app[0].printPing = true
*.host[0].app[0].srcAddr = "fec0:0:12f1:dbb8:8aa:ff:fe00:1"
*.host[0].app[0].destAddr = "fec0:0:12f1:dbb8:8aa:ff:fe00:2"
*.host[0].app[0].startTime = 15s

# Configuración de interfaces
*.node[*].configurator.startTime = 5s
*.node[*].configurator.locationUpdateInterval = 1s

[Config Location]
extends = Base

*.manager.launchConfig = xmldoc("9g3qxs-auto.launchd.xml")

**.routingProtocol.typename = ""

[Config NetworkChange]
extends = Base

network = veins_proj.sim.sim9g3qxs.TestRoadwayDatabase

*.manager.launchConfig = xmldoc("cambio-red.launchd.xml")

**.routingProtocol.typename = ""

[Config RoutingProtocol]
extends = Base

# Vehículos
*.manager.moduleType = "veins_proj.node.Car"

# Hosts
*.host[*].typename = "veins_proj.node.StaticHost"

# Parámetros de enrutamiento
**.routingProtocol.startTime = 10s + uniform(0.0s, 3s)
**.routingProtocol.helloCarInterval = 3s + uniform(0.5s, 1.0s)
**.routingProtocol.neighbouringCarValidityTime = 5s
**.routingProtocol.helloHostInterval = 3s + uniform(0.5s, 1.0s)
**.routingProtocol.neighbouringHostValidityTime = 5s
**.routingProtocol.pongTimeout = 1s
**.routingProtocol.edgeStatusValidityTime = 5s
**.routingProtocol.routeValidityTime = 2s
**.routingProtocol.delayedDatagramValidityTime = 2s
**.routingProtocol.udpPacketDelayTime = 0.5s
**.routingProtocol.vertexProximityRadius = 10m
